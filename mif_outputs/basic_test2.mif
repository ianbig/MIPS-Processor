-- null
DEPTH = 4096;
WIDTH = 32;

ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;

CONTENT
BEGIN
    -- nop #0
0000 : 00000000000000000000000000000000;
    -- addi $1, $0, 5  # r1 = 5
0001 : 00101000010000000000000000000101;
    -- addi $2, $0, 3  # r2 = 3
0002 : 00101000100000000000000000000011;
    -- add  $3, $1, $2 # r3 = 5 + 3 = 8
0003 : 00000000110000100010000000000000;
    -- addi $3, $3, 0  #check r3 = 8
0004 : 00101000110001100000000000000000;
    -- j  14 #5
0005 : 00001000000000000000000000001110;
    -- sub $4, $1, $2 	# r4 = r1 - r2 = 2 -6
0006 : 00000001000000100010000000000100;
    -- addi $4, $4, 0  #check r4 =2 -7
0007 : 00101001000010000000000000000000;
    -- and $5, $0, $1 	# r5 = 0 -8
0008 : 00000001010000000001000000001000;
    -- addi $5, $5, 0 #check r5 -9
0009 : 00101001010010100000000000000000;
    -- and $6, $1, $2  # r6 = 1 -10
0010 : 00000001100000100010000000001000;
    -- addi $6, $6, 0 #check r6 = 1 -11
0011 : 00101001100011000000000000000000;
    -- or  $7, $0, $2	# r7 = 3 -12
0012 : 00000001110000000010000000001100;
    -- addi $7, $7, 0 #check r7 = 3 -13
0013 : 00101001110011100000000000000000;
    -- bne $6, $7, 4  #jump to 19 - 14
0014 : 00010001100011100000000000000100;
    -- sll $8, $1, 2	# r8 = r1 * 4 = 20  -15
0015 : 00000010000000100000000100010000;
    -- addi $8, $8, 0   #check r8 = 20 -16
0016 : 00101010000100000000000000000000;
    -- sra $9, $3, 1	# r9 = 4 -17
0017 : 00000010010001100000000010010100;
    -- addi $9, $9, 0  #check r9 = 4 -18
0018 : 00101010010100100000000000000000;
    -- addi $20, $0, 32768	# r20 = 32768 -19
0019 : 00101101000000001000000000000000;
    -- sll $20, $20, 15  #r20 = 1,073,741,824 -20
0020 : 00000101001010000000011110010000;
    -- addi $20, $20, 0 #check r20 = 1,073,741,824 -21
0021 : 00101101001010000000000000000000;
    -- add $21, $20, $20	# add overflow -22
0022 : 00000101011010010100000000000000;
    -- addi $30, $30, 0  #check r30 = 1 -23
0023 : 00101111101111000000000000000000;
    -- addi $21, $21, 0 #check r21 = 0 -24
0024 : 00101101011010100000000000000000;
    -- bne $2, $7, 10 #no jump -25
0025 : 00010000100011100000000000001010;
    -- addi $22, $0, 65535 #r22 = 65535
0026 : 00101101100000001111111111111111;
    -- sll $22, $22, 15 #r22 = 2,147,450,880
0027 : 00000101101011000000011110010000;
    -- addi $22, $22, 32767 #r22 = 2,147,483,647
0028 : 00101101101011000111111111111111;
    -- addi $22, $22, 0 #check r22 = 2,147,483,647
0029 : 00101101101011000000000000000000;
    -- addi $23, $22, 1 #addi overflow
0030 : 00101101111011000000000000000001;
    -- addi $30, $30, 0  #check r30 = 2
0031 : 00101111101111000000000000000000;
    -- addi $23, $23, 0 #check r23 = 0
0032 : 00101101111011100000000000000000;
    -- addi $23, $0, 65536 #r23 = 65,536
0033 : 00101101110000010000000000000000;
    -- sll $23, $23, 15 #r23 = 2,147,483,648
0034 : 00000101111011100000011110010000;
    -- addi $23, $23, 0 #check r23 =  2,147,483,648
0035 : 00101101111011100000000000000000;
    -- addi $24, $0, 1 #r24 = 1
0036 : 00101110000000000000000000000001;
    -- sub $25, $23, $24 # sub overflow
0037 : 00000110011011111000000000000100;
    -- addi $30, $30, 0 #check r30 = 3
0038 : 00101111101111000000000000000000;
    -- addi $25, $25, 0 #check r25 = 0
0039 : 00101110011100100000000000000000;
    -- addi $10, $0, 345	# r10 = 345
0040 : 00101010100000000000000101011001;
    -- addi $11, $0, 567	# r11 = 567
0041 : 00101010110000000000001000110111;
    -- sw $10, 1($0)		# store 345 into address 1
0042 : 00111010100000000000000000000001;
    -- sw $11, 2($0)		# store 567 into address 2
0043 : 00111010110000000000000000000010;
    -- lw $12, 1($0)		# load 345 into r12
0044 : 01000011000000000000000000000001;
    -- lw $13, 2($0)		# load 567 into r13
0045 : 01000011010000000000000000000010;
    -- addi $12, $12, 0 #check r12 = 345
0046 : 00101011000110000000000000000000;
    -- addi $13, $13, 0 #check r13 = 567
0047 : 00101011010110100000000000000000;
[0048 .. 4095] : 00000000000000000000000000000000;
END;
